#!/bin/bash

#
# USEFUL FUNCTIONS
#

# source files, if they exist
function do-source {
    if [ -f $1 ]; then
        #echo "Sourcing $1"
        source $1 2>/dev/null
    fi
}

# does the command exist?
function cmd-exists {
   type "$1" &> /dev/null;
}

# Weather
weather(){
    curl https://wttr.in/$1\?1Fn
}
wfull(){ curl https://wttr.in/$1
}
wimg(){
    kitty icat https://v3.wttr.in/$1.png
}

# Add GPD
export GPD_TTY=$(tty)

# Disable zsh matching
setopt +o nomatch

#
# ENVIRONMENT VARIABLES
#

# zsh history
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history
bindkey -v
bindkey '^R' history-incremental-search-backward

# GPG Key
export GPGKEY=448C2B189756743013D5F7C22FD2A59C1D734C1F

# My variables
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='nvim'
 fi
export PAGER="less"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
#export MANPAGER="nvim -c 'set ft=man' -"
export PROGRAMS=$HOME/Programs
export GAMES=$PROGRAMS/Games
export DOTFILES=$HOME/.dotfiles
export DOT=$DOTFILES
export PROJ=$HOME/Projects
export GIT=$PROJ
export PROJECTS=$PROJ
export TA=$PROJ/time-analysis/src
export TAR=$PROJ/time-analysis-res/results
export GS=$PROJ/gaiasky
export GSC=$PROJ/gaiasky-catgen
export RTS=$PROJ/rts-engine-private
export WEB=$PROJ/langurmonkey.gitlab.io
export PHD=$PROJ/phd_thesis

# JVM
export JAVA_HOME=/usr/lib/jvm/default
export JDK_HOME=/usr/lib/jvm/default-runtime

# Programs
export TOPCAT=$PROGRAMS/Topcat

# Path
export PATH=$PATH:$HOME/.local/bin:$HOME/.dotfiles/bin:$HOME/.cargo/bin:.

# Vulkan SDK
export VULKAN=$HOME/Workspaces/vulkan
export VULKAN_SDK=$VULKAN/VulkanSDK/1.1.73.0/x86_64
#export PATH=$PATH:$VULKAN_SDK/bin
export LD_LIBRARY_PATH=$VULKAN_SDK/lib
export VK_LAYER_PATH=$VULKAN_SDK/etc/explicit_layer.d

# Android SDK
export ANDROID_SDK_ROOT=$PROGRAMS/Android/sdk

# NNN config
do-source "$DOTFILES"/nnn/conf.sh

# LF config
export OPENER="$DOTFILES/lf/open"
do-source "$DOTFILES"/lf/lf_icons.sh
do-source "$DOTFILES/lf/lfcd.sh"

# FFF config
do-source "$DOTFILES"/fff/conf.sh

# Less
export LESS=-R
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

# Other utils
export RANGER_RELOAD_RC=FALSE
export TERMINAL=kitty
export BROWSER=qutebrowser
GPG_TTY=$(tty)
export GPG_TTY

if cmd-exists npm; then
    export NODE_PATH=$NODE_PATH:$(npm root -g)
fi

# QT
export QT_QPA_PLATFORMTHEME=qt5ct
export QT_STYLE_OVERRIDE=gtk2

# Calibre
export CALIBRE_USE_DARK_PALETTE=1

#
# ALIASES
# 
do-source $DOTFILES/env/.aliases

# Starship prompt
if cmd-exists starship; then
    eval "$(starship init zsh)"
fi

# ZSH bindings
[ -f ~/.dotfiles/zsh/.zsh_bindings ] && source ~/.dotfiles/zsh/.zsh_bindings

# ZSH PLUGINS

# Load zsh-syntax-highlighting
do-source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Load zsh-autosuggestions
do-source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# Load colorize
do-source $DOTFILES/zsh/plugins/colorize/colorize.plugin.zsh

# Load z
do-source $DOTFILES/zsh/plugins/z/z.plugin.zsh

# Load history substring search
do-source $DOTFILES/zsh/plugins/history-substring-search/history-substring-search.plugin.zsh

#
# ENVIRONMENT INIT
#
# Apply wal theme, if any
[ -f ~/.cache/wal/sequences ] &&  cat ~/.cache/wal/sequences
[ -f ~/.cache/wal/colors-tty.sh ] && source ~/.cache/wal/colors-tty.sh

# Uncomment to unlock ssh key by default (asks for password)
eval $(keychain --eval $HOME/.ssh/id_rsa)
