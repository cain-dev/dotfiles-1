#!/bin/bash
# Arguments:
# 1: icon
# 2: color

#----------------------------------------------------------------------------------------------------
# Requires playerctl - https://github.com/acrisci/playerctl
#----------------------------------------------------------------------------------------------------
#Exit the script if no music players running
[[ "$(playerctl status 2>&1)" = "No players found" ]] && exit 33;

def_icon=
def_col=#fff
source $(dirname $0)/params

# Define cursor icons
playIcon="  ";
pauseIcon="  ";
stopIcon="  ";

#User provided args for playerctl
ARGUMENTS="$INSTANCE";

#Mouse actions for the block
case $BLOCK_BUTTON in
	1) playerctl $ARGUMENTS previous ;;
	2) playerctl $ARGUMENTS play-pause ;;
	3) playerctl $ARGUMENTS next ;;
	4) playerctl $ARGUMENTS position 5+ ;;
	5) playerctl $ARGUMENTS position 5- ;;
esac

#Define song info variables
playerStatus=$(playerctl $ARGUMENTS status);
songArtist="$(playerctl $ARGUMENTS metadata --format "{{ markup_escape(artist) }}")";
songArtist="${songArtist:-(Unknown Artist)}";
songTitle=$(playerctl $ARGUMENTS metadata --format "{{ markup_escape(title) }}");
# Escape ampersand
songInfo=$(echo "$songArtist - $songTitle" | sed -r 's/&+/&amp;/g');
elapsedTime=$(playerctl metadata --format "{{ duration(position) }}");
songLength=$(playerctl metadata --format "{{ duration(mpris:length) }}");
songDuration=" ($elapsedTime/$songLength)";

label="<span color='$col'>$icon</span> "

#Display output
if [[ "${playerStatus^}" = "Paused" ]]; then
	echo "$label$songInfo$songDuration$pauseIcon";
elif [[ "${playerStatus^}" = "Playing" ]]; then
	echo "$label$songInfo$songDuration$playIcon";
elif [[ "${playerStatus^}" = "Stopped" ]]; then
	echo "${label}Stopped${stopIcon}";
fi
