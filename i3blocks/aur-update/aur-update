#!/usr/bin/env python3

# List available updates from the Arch User Repository (AUR)

# Copyright 2018 Johannes Lange
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import requests
import subprocess as sp

block_button = os.environ['BLOCK_BUTTON'] if 'BLOCK_BUTTON' in os.environ else None
block_button = int(block_button) if block_button else None


class Args(object):
    def add_argument(self, name, default='', arg_type=str):
        val = default
        if name in os.environ:
            val = os.environ[name]
            if arg_type == list:
                val = val.split()
        val = arg_type(val)
        setattr(self, name.lower(), val)
        return val


args = Args()
args.add_argument('UPDATE_COLOR', 'yellow')
args.add_argument('QUIET', False, bool)
args.add_argument('IGNORE', [], list)



# get list of foreign packages -- assumed to be from the AUR
packages = sp.check_output(['yay', '-Qu']).decode('utf8')

updates = []
for pkg in packages.split('\n'):
    if not pkg:
        continue
    #pakg, ver, None, aurver = pkg.split()
    updates.append(pkg)

n_updates = len(updates)
if n_updates > 0:
    msg = "<span color='{0}'>{1} AUR updates</span>"
    print(msg.format(args.update_color, n_updates))
elif not args.quiet:
    print('AUR up to date')

if block_button in [2, 3]:
    sp.call(['notify-send', 'AUR updates', '\n'.join(updates)])

if not 'BLOCK_NAME' in os.environ and n_updates > 0:
    # not called by i3blocks: show the complete list
    print('\n'.join(updates))
